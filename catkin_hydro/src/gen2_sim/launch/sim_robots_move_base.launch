<launch>
  <master auto="start"/>
  <param name="/use_sim_time" value="true"/>

  <node pkg="map_server" type="map_server" name="map_server" args="$(find gen2_maps)/maps/test_map.yaml" respawn="false" >
    <param name="frame_id" value="/map" />
  </node>

  <node pkg="stage_ros" type="stageros" name="stageros" args="$(find gen2_sim)/worlds/broun_LCM.world">
		
	</node>

  <!-- BEGIN ROBOT 0 -->
  <group ns="robot_0">
    <param name="tf_prefix" value="robot_0" />

    <node pkg="move_base" type="move_base" respawn="false" name="move_base_node" output="screen">
      <remap from="map" to="/map" />
      <param name="controller_frequency" value="10.0" />
      <rosparam file="$(find gen2_sim)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
      <rosparam file="$(find gen2_sim)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
      <rosparam file="$(find gen2_sim)/config/local_costmap_params.yaml" command="load" />
      <rosparam file="$(find gen2_sim)/config/global_costmap_params.yaml" command="load" />
      <rosparam file="$(find gen2_sim)/config/base_local_planner_params.yaml" command="load" />
    </node>

    <node pkg="fake_localization" type="fake_localization" name="fake_localization" respawn="false" output="screen">
      <param name="odom_frame_id" value="robot_0/odom" />
      <param name="base_frame_id" value="robot_0/base_link" />
    </node>
    
    <param name="lidarLinkFrame" value="robot_0/base_laser_link" type="str" />
    <node pkg="gen2_frontier" type="robotSenseBoundary.py" name="robtSenseBoundary" output="screen" />
		
  </group>
  <!-- END ROBOT 0 -->

  <!-- BEGIN ROBOT 1 -->
  <group ns="robot_1">
    <param name="tf_prefix" value="robot_1" />

    <node pkg="move_base" type="move_base" respawn="false" name="move_base_node" output="screen">
      <remap from="map" to="/map" />
      <param name="controller_frequency" value="10.0" />
      <rosparam file="$(find gen2_sim)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
      <rosparam file="$(find gen2_sim)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
      <rosparam file="$(find gen2_sim)/config/local_costmap_params.yaml" command="load" />
      <rosparam file="$(find gen2_sim)/config/global_costmap_params.yaml" command="load" />
      <rosparam file="$(find gen2_sim)/config/base_local_planner_params.yaml" command="load" />
    </node>

    <node pkg="fake_localization" type="fake_localization" name="fake_localization" respawn="false">
      <param name="odom_frame_id" value="robot_1/odom" />
      <param name="base_frame_id" value="robot_1/base_link" />
    </node>
    
     <param name="lidarLinkFrame" value="robot_1/base_laser_link" type="str" />
    <node pkg="gen2_frontier" type="robotSenseBoundary.py" name="robtSenseBoundary" output="screen" />
  </group>
  <!-- END ROBOT 1 -->
  
  <!-- BEGIN ROBOT 2 -->
  <group ns="robot_2">
    <param name="tf_prefix" value="robot_2" />

    <node pkg="move_base" type="move_base" respawn="false" name="move_base_node" output="screen">
      <remap from="map" to="/map" />
      <param name="controller_frequency" value="10.0" />
      <rosparam file="$(find gen2_sim)/config/costmap_common_params.yaml" command="load" ns="global_costmap" />
      <rosparam file="$(find gen2_sim)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
      <rosparam file="$(find gen2_sim)/config/local_costmap_params.yaml" command="load" />
      <rosparam file="$(find gen2_sim)/config/global_costmap_params.yaml" command="load" />
      <rosparam file="$(find gen2_sim)/config/base_local_planner_params.yaml" command="load" />
    </node>

    <node pkg="fake_localization" type="fake_localization" name="fake_localization" respawn="false">
      <param name="odom_frame_id" value="robot_2/odom" />
      <param name="base_frame_id" value="robot_2/base_link" />
    </node>
    
     <param name="lidarLinkFrame" value="robot_2/base_laser_link" type="str" />
    <node pkg="gen2_frontier" type="robotSenseBoundary.py" name="robtSenseBoundary" output="screen" />
  </group>
  <!-- END ROBOT 1 -->

  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find gen2_sim)/rviz.rviz" />

</launch>
